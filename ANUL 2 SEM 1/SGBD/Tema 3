--EXERCITIUL 1

DECLARE
TYPE t_codes IS TABLE OF emp_mdr.employee_id%TYPE  
INDEX BY PLS_INTEGER;
TYPE t_salaries IS TABLE OF emp_mdr.salary%TYPE;
v_codes t_codes;
v_salaries t_salaries;

BEGIN
SELECT employee_id, salary
BULK COLLECT INTO v_codes, v_salaries
FROM (SELECT *
    FROM emp_mdr
    ORDER BY SALARY)
WHERE ROWNUM <= 5;

FOR i IN 1..5 LOOP
    UPDATE emp_mdr
    SET salary = salary * 1.05
    WHERE employee_id = v_codes(i);
    DBMS_OUTPUT.PUT(v_codes(i) || ' ' || v_salaries(i) || ' ' || v_salaries(i)*1.05);
    DBMS_OUTPUT.NEW_LINE;
END LOOP;
END;
/

-- EXERCITIUL 2

CREATE OR REPLACE TYPE tip_orase_mdr IS TABLE OF VARCHAR(20);
/

CREATE TABLE excursie_mdr (
cod_excursie NUMBER(4),
denumire VARCHAR2(20),
status VARCHAR2(20)
);

ALTER TABLE excursie_mdr add (orase 
tip_orase_mdr) nested table orase store
as tabel_orase_mdr;

SELECT * FROM EXCURSIE_MDR;

--a
INSERT INTO EXCURSIE_MDR VALUES 
(1, 'AUSTRIA', 'ANULAT', tip_orase_mdr('VIENA','GRAZ', 'LINZ', 'SALZBURG' ));

INSERT INTO EXCURSIE_MDR VALUES 
(2, 'SPANIA', 'DISPONIBIL', tip_orase_mdr('MADRID', 'BARCELONA', 'SEVILLA', 'IBIZA'));

INSERT INTO EXCURSIE_MDR VALUES 
(3, 'ITALIA', 'ANULAT', tip_orase_mdr('ROMA', 'MILANO', 'AMALFI', 'VENETIA'));

INSERT INTO EXCURSIE_MDR VALUES 
(4, 'GERMANIA', 'DISPONIBIL', tip_orase_mdr('BERLIN', 'MUNCHEN', 'HAMBURG', 'KOLN' ));

INSERT INTO EXCURSIE_MDR VALUES 
(5, 'FRANTA', 'DISPONIBIL', tip_orase_mdr('PARIS', 'NISA', 'MARSILIA', 'LION'));

COMMIT;

--b)
--1
DECLARE
    id NUMBER(4) := &id;
    oras VARCHAR(200) :='&oras';
BEGIN
    INSERT INTO TABLE( SELECT orase FROM excursie_mdr WHERE cod_excursie = id) 
    VALUES (UPPER(oras));
    DBMS_OUTPUT.PUT_LINE ('Am inserat un oras nou la id-ul dat');
END;
/

ROLLBACK;

--2
DECLARE
  exc excursie_mdr.denumire%type := lower ('&denumire');
  oras2 varchar(20) := '&nume';
  t excursie_mdr.orase%type;
BEGIN 
  select orase into t from excursie_mdr where lower(denumire)=exc;
  
  t.extend;
  for i in reverse 2..t.last-1 loop 
     t(i+1):=t(i);
  end loop;
  t(2):=oras2;
  
  update excursie_mdr set orase=t where lower(denumire)=exc;
END;
/
SELECT * FROM EXCURSIE_MDR;
--3

DECLARE 
    t tip_orase_mdr := tip_orase_mdr();
    id        NUMBER(4) := &id;
    oras1   VARCHAR(200) :='&oras1';
    oras2   VARCHAR(200) :='&oras2';
BEGIN
    SELECT orase INTO t FROM excursie_mdr WHERE cod_excursie = id;
    
    FOR i in 1..t.count LOOP
        IF t(i) = oras1 
            THEN t(i) := UPPER(oras2);
        ELSIF t(i) = oras2 
            THEN t(i) := UPPER(oras1);
            
        END IF;
    END LOOP;
    
    UPDATE excursie_mdr SET orase = t WHERE cod_excursie = id;
END;
/

SELECT * FROM EXCURSIE_MDR;

ROLLBACK;

--4
DECLARE
    nume_exc excursie_mdr.denumire%type :='&denumire';
    oras varchar(20):='&nume';
    o excursie_mdr.orase%type;
    type tablou_indexat is table of varchar2(20) index by binary_integer;
    t tablou_indexat;
    
BEGIN

   select orase into o
   from excursie_mdr
   where denumire=nume_exc;
   
   for i in o.last..o.first loop
     if lower(o(i))<>oras then 
        t(t.count+1):=o(i);
     end if;
   end loop;
    
   
   for i in 1..t.count loop
   o(i):=t(i);
   dbms_output.put_line(o(i));
   end loop;
   o.trim;
   
   update excursie_mdr
   set orase=o
   where denumire=nume_exc;
    
END;
/
ROLLBACK;
COMMIT;

--c)
DECLARE 
  t tip_orase_mdr := tip_orase_mdr();
  id NUMBER(4) := &id;
BEGIN
  select orase into t from excursie_mdr where cod_excursie=id;
  DBMS_OUTPUT.PUT_LINE( 'Excursia are orasele: ' || t.count);
  for i in 1..t.count loop
    DBMS_OUTPUT.PUT_LINE(t(i));
  end loop;
END;
/

--d)
DECLARE 
   t tip_orase_mdr := tip_orase_mdr();
   TYPE coduri IS TABLE OF NUMBER(4); 
   exc_cod coduri := coduri();
BEGIN
   SELECT cod_excursie BULK COLLECT
   INTO exc_cod
   FROM excursie_mdr;
   FOR i IN 1..exc_cod.count LOOP
     SELECT orase INTO t FROM excursie_mdr
        WHERE cod_excursie = exc_cod(i);
        DBMS_OUTPUT.PUT_LINE('Excursia ' ||exc_cod(i) || ' contine urmatoarele ' || t.count || ' orase: ');
        FOR i IN 1..t.count LOOP 
            DBMS_OUTPUT.PUT_LINE(t(i) || ' ');
        END LOOP;
        t.delete;
    END LOOP;
END;
/

--e
DECLARE
    v_nr_min NUMBER := 99999;
BEGIN
    FOR e IN (SELECT orase FROM excursie_mdr) LOOP
        IF e.orase.COUNT < v_nr_min THEN
            v_nr_min := e.orase.COUNT;
        END IF;
    END LOOP;

    FOR e IN (SELECT cod_excursie, orase FROM excursie_mdr) LOOP
        IF e.orase.COUNT = v_nr_min THEN
            UPDATE excursie_mdr
            SET status = 'anulata'
            WHERE cod_excursie = e.cod_excursie;
        END IF;
    END LOOP;
END;
/



--EXERCITIUL 3
DROP TABLE EXCURSIE_MDR;
CREATE OR REPLACE TYPE tip_orase_mdr IS TABLE OF VARCHAR(20);
/

CREATE TABLE excursie_mdr (
cod_excursie NUMBER(4),
denumire VARCHAR2(20),
status VARCHAR2(20)
);

ALTER TABLE excursie_mdr add (orase 
tip_orase_mdr) nested table orase store
as tabel_orase_mdr;

SELECT * FROM EXCURSIE_MDR;

--a
INSERT INTO EXCURSIE_MDR VALUES 
(1, 'AUSTRIA', 'ANULAT', tip_orase_mdr('VIENA','GRAZ', 'LINZ', 'SALZBURG' ));

INSERT INTO EXCURSIE_MDR VALUES 
(2, 'SPANIA', 'DISPONIBIL', tip_orase_mdr('MADRID', 'BARCELONA', 'SEVILLA', 'IBIZA'));

INSERT INTO EXCURSIE_MDR VALUES 
(3, 'ITALIA', 'ANULAT', tip_orase_mdr('ROMA', 'MILANO', 'AMALFI', 'VENETIA'));

INSERT INTO EXCURSIE_MDR VALUES 
(4, 'GERMANIA', 'DISPONIBIL', tip_orase_mdr('BERLIN', 'MUNCHEN', 'HAMBURG', 'KOLN' ));

INSERT INTO EXCURSIE_MDR VALUES 
(5, 'FRANTA', 'DISPONIBIL', tip_orase_mdr('PARIS', 'NISA', 'MARSILIA', 'LION'));

COMMIT;

--b
--1
DECLARE
  id number(4) :=&id;
  oras varchar(200) :='&oras';
  t tip_orase_mdr := tip_orase_mdr();
BEGIN
  SELECT orase into t from excursie_mdr where cod_excursie=id;
  
  t.EXTEND;
  t(t.COUNT) := oras;
  
  update excursie_mdr set orase = t where cod_excursie= id;
END;
/


--2
DECLARE  
    t1 tip_orase_mdr := tip_orase_mdr(); 
    t2 tip_orase_mdr := tip_orase_mdr();
    id number(4) := &id;
    oras varchar(200) :='&oras';
BEGIN 
    SELECT orase INTO t1 FROM excursie_mdr WHERE cod_excursie = id;
    
    FOR i IN 1..t1.count LOOP 
        t2.extend; 
        if i < 2 then 
            t2(i):= t1(i);
        end if;
        if i = 2 then
            t2(i) := UPPER(oras);
            t2.extend;
            t2(i+1) := t1(i);
        end if;
        if i > 2 then
            t2(i+1) := t1(i);
        end if;
    END LOOP;
    
    UPDATE excursie_mdr SET orase = t2 WHERE cod_excursie = id;
END;
/


--3

DECLARE
    v_cod_excursie CONSTANT NUMBER NOT NULL := &cod;
    v_orase tip_orase_mdr;
    v_i1 NUMBER;
    v_i2 NUMBER;
    v_oras2 VARCHAR(20);
    nume_oras1 varchar(200) := '&oras1';
    nume_oras2 varchar(200) := '&oras2';
BEGIN
    SELECT orase INTO v_orase FROM excursie_mdr WHERE cod_excursie = v_cod_excursie;

    FOR i IN v_orase.FIRST..v_orase.LAST LOOP
        IF v_orase(i) = nume_oras1 THEN
            v_i1 := i;
        ELSIF v_orase(i) = nume_oras2 THEN
            v_i2 := i;
        END IF;
    END LOOP;

    v_oras2 := v_orase(v_i1);
    v_orase(v_i1) := v_orase(v_i2);
    v_orase(v_i2) := v_oras2;

    UPDATE excursie_mdr SET orase = v_orase WHERE cod_excursie = v_cod_excursie;
END;
/


--4
DECLARE
    v_cod_excursie CONSTANT NUMBER NOT NULL := &cod;
    v_orase tip_orase_mdr;
    v_index NUMBER := NULL;
    nume_oras varchar(200) := '&nume_oras';
BEGIN
    SELECT orase INTO v_orase FROM excursie_mdr WHERE cod_excursie = v_cod_excursie;

    FOR i IN v_orase.FIRST..v_orase.LAST LOOP
        IF v_orase(i) = nume_oras THEN
            v_index := i;
        END IF;
    END LOOP;

    FOR i IN (v_index + 1)..v_orase.COUNT LOOP
        v_orase(i - 1) := v_orase(i);
    END LOOP;

    v_orase.TRIM;

    UPDATE excursie_mdr
    SET orase = v_orase
    WHERE cod_excursie = v_cod_excursie;
END;
/


--c)
DECLARE
    v_cod_excursie CONSTANT NUMBER NOT NULL := &cod;
    v_orase tip_orase_mdr;
BEGIN
    SELECT orase INTO v_orase FROM excursie_mdr WHERE cod_excursie = v_cod_excursie;

    DBMS_OUTPUT.PUT_LINE('Excursia are orasele : ' || v_orase.COUNT);

    FOR i IN v_orase.FIRST..v_orase.LAST LOOP
        DBMS_OUTPUT.PUT_LINE('Oras ' || i || ': ' || v_orase(i));
    END LOOP;
END;
/

--d
DECLARE
    TYPE tip_coduri_excursii IS TABLE OF excursie_mdr.cod_excursie%TYPE;
    v_coduri_excursii tip_coduri_excursii;
    v_orase tip_orase_mdr;
BEGIN
    FOR e IN (SELECT cod_excursie, orase FROM excursie_mdr) LOOP
        DBMS_OUTPUT.PUT_LINE('Excursie ' || e.cod_excursie);

        FOR j IN 1..(e.orase.COUNT) LOOP
            DBMS_OUTPUT.PUT_LINE('  Oras ' || j || ': ' || e.orase(j));
        END LOOP;
    END LOOP;
END;
/

--e
DECLARE
    nr_min NUMBER := 99999;
    id number(4);
BEGIN
    FOR i IN (SELECT orase FROM excursie_mdr) LOOP
        IF i.orase.COUNT < nr_min THEN
            nr_min := i.orase.COUNT;
        END IF;
    END LOOP;

    FOR i IN (SELECT cod_excursie, orase FROM excursie_mdr) LOOP
        IF i.orase.COUNT = nr_min THEN
            UPDATE excursie_mdr
            SET status = 'anulat'
            WHERE cod_excursie = id;
        END IF;
    END LOOP;
END;
/

